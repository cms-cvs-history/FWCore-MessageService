# Unit test configuration file for MessageLogger service: defaults and limits
# testing overall defaults
#   overall default of no time stamps
#   overall defaults for all destinations, for unnamed categories                     -- u8_overall_unnamed
#   overall defaults for all destinations, specific category                          -- u8_overall_specific
# testing limits
#   default limit for a destination superceding overall default                       -- u8_supercede_specific   
#   default limit for a destination not superceding specific category overall default -- u8_non_supercede_common
#   limit for specific category superceding both defaults                             -- u8_specific

process TEST = {
  include "FWCore/Framework/test/cmsExceptionsFatal.cff"
  untracked PSet maxEvents = {untracked int32 input = 1}
  service = MessageLogger {
    
    untracked
    vstring destinations = { "u8_overall_unnamed"
    			   , "u8_overall_specific"
    			   , "u8_supercede_specific"
    			   , "u8_non_supercede_common"
   			   , "u8_specific"
			   }

    untracked vstring categories = { "preEventProcessing"
    				   , "lim3bydefault"
    				   , "lim2bycommondefault"
    				   , "lim0bydefaults"
    				   , "expect_overall_unnamed"
    				   , "expect_overall_specific"
    				   , "expect_supercede_specific"
    				   , "expect_non_supercede_common_specific"
    				   , "expect_specific"
			           , "FwkJob"
				   }

    untracked
    PSet default = {  
			untracked PSet expect_overall_unnamed               = { untracked int32 limit = 0 }
			untracked PSet expect_overall_specific              = { untracked int32 limit = 0 }
			untracked PSet expect_supercede_specific            = { untracked int32 limit = 0 }
			untracked PSet expect_non_supercede_common_specific = { untracked int32 limit = 0 }
			untracked PSet expect_specific = { untracked int32 limit = 0 }
    			untracked int32 limit = 5  
			untracked PSet lim2bycommondefault = { untracked int32 limit = 2 }
			untracked PSet lim0bydefaults      = { untracked int32 limit = 0 }
			untracked PSet FwkJob              = { untracked int32 limit = 0 }
			untracked bool noTimeStamps = true  
	           }

   untracked
   PSet u8_overall_unnamed = {  
			untracked PSet expect_overall_unnamed = { untracked int32 limit = -1 }
			untracked PSet lim3bydefault          = { untracked int32 limit = 0 }
			untracked PSet lim2bycommondefault    = { untracked int32 limit = 0 }
			untracked bool noTimeStamps = true  
	           }


   untracked
   PSet u8_overall_specific = {  
			untracked PSet expect_overall_specific = { untracked int32 limit = -1 }
			untracked PSet lim3bydefault           = { untracked int32 limit = 3 }
			untracked PSet lim2bycommondefault     = { untracked int32 limit = 0 }
			untracked PSet default                 = { untracked int32 limit = 0 }
			untracked bool noTimeStamps = true  
	           }
		   
   untracked
   PSet u8_supercede_specific = {  
			untracked PSet expect_supercede_specific = { untracked int32 limit = -1 }
			untracked PSet lim2bycommondefault       = { untracked int32 limit = 8 }
			untracked PSet default                   = { untracked int32 limit = 0 }
			untracked bool noTimeStamps = true  
	           }
		   
   untracked
   PSet u8_non_supercede_common = {  
			untracked PSet expect_non_supercede_common_specific = { untracked int32 limit = -1 }
			untracked PSet default                              = { untracked int32 limit = 0 }
			untracked bool noTimeStamps = true  
	           }
		   
   untracked
   PSet u8_specific = {  
			untracked PSet expect_specific =     { untracked int32 limit = -1 }
			untracked PSet default =             { untracked int32 limit = 0 }
			untracked PSet lim2bycommondefault = { untracked int32 limit = 0 }
			untracked PSet lim0bydefaults =      { untracked int32 limit = 6 }
			untracked bool noTimeStamps = true  
	           }
		   			    
  }

  include "FWCore/Services/data/InitRootHandlers.cfi"
  
  path p = { sendSomeMessages }

  module sendSomeMessages = UnitTestClient_E { }

  source = EmptySource { }
}
